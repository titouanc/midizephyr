name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [created]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [midizephyr, kinesta, volcadrum]

    steps:
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install --no-install-recommends -y wget gcc-arm-none-eabi python3-pip ninja-build

    - name: Install cmake 3.21
      working-directory: /usr
      run: |
        sudo wget https://github.com/Kitware/CMake/releases/download/v3.21.2/cmake-3.21.2-linux-x86_64.sh
        echo "3310362c6fe4d4b2dc00823835f3d4a7171bbd73deb7d059738494761f1c908c  cmake-3.21.2-linux-x86_64.sh" | sha256sum --check
        sudo sh cmake-3.21.2-linux-x86_64.sh --skip-license

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Python dependencies
      run: pip install -r zephyr/scripts/requirements-base.txt

    - name: Cache west modules
      uses: actions/cache@v3
      env:
        cache-name: cache-zephyr-modules
      with:
        path: |
          modules/
          tools/
          bootloader/
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.gitmodules') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: West update
      run: west update

    - name: Build ${{ matrix.target }} for nucleo f429zi
      run: west build -b nucleo_f429zi ${{ matrix.target }}
      env:
        GNUARMEMB_TOOLCHAIN_PATH: /usr
        ZEPHYR_TOOLCHAIN_VARIANT: gnuarmemb

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.target }}.bin
        path: build/zephyr/zephyr.bin

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [ build ]

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        target: [midizephyr, kinesta, volcadrum]
    
    steps:
    - id: get_release
      uses: bruceadams/get-release@v1.2.3

    - uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.target }}.bin

    - name: Publish ${{ matrix.target }} to Github release
      id: upload_release_firmware
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: zephyr.bin
        asset_name: ${{ matrix.target }}.bin
        asset_content_type: application/octet-stream
