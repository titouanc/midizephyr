name: Build or release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [created]

jobs:
  build_or_release:
    runs-on: ubuntu-20.04

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        target: [midizephyr]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get associated Github release
        if: github.event_name == 'release' && github.event.action == 'created'
        id: get_release
        uses: bruceadams/get-release@v1.2.2

      - name: Cache west modules
        uses: actions/cache@v2
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            bootloader/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Checkout submodules
        run: git submodule update --init --depth 1

      - name: West update
        uses: docker://zmkfirmware/zephyr-west-action-arm:latest
        with:
          args: 'update'

      - name: Build ${{ matrix.target }} for nucleo f429zi
        uses: docker://zmkfirmware/zephyr-west-action-arm:latest
        with:
          args: 'build "-b nucleo_f429zi ${{ matrix.target }}"'

      - name: Publish ${{ matrix.target }} to Github release
        if: github.event_name == 'release' && github.event.action == 'created'
        id: upload_release_firmware
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: build/zephyr/zephyr.bin
          asset_name: ${{ matrix.target }}.bin
          asset_content_type: application/octet-stream
